{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний в документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Отримання посилань на елементи DOM\nconst flatpickrElement = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\n// Змінна для зберігання інтервалу\nlet countdownInterval;\n\n// Налаштування flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n\n    // Перевірка, чи обрана користувачем дата в майбутньому\n    if (selectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\n// Ініціалізація календаря flatpickr\nconst calendar = flatpickr(flatpickrElement, options);\n\n// Обробник події при кліку на поле вибору дати\nflatpickrElement.addEventListener('click', () => {\n  // Перевірка, чи запущений таймер\n  if (countdownInterval) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please reload the page to change the timer.',\n    });\n  }\n});\n\n// Функція для оновлення таймера\nfunction updateTimer(endTime) {\n  const currentTime = new Date().getTime();\n  const timeLeft = endTime - currentTime;\n\n  // Перевірка, чи вже минув термін таймера\n  if (timeLeft <= 0) {\n    clearInterval(countdownInterval);\n    daysElement.textContent = '00';\n    hoursElement.textContent = '00';\n    minutesElement.textContent = '00';\n    secondsElement.textContent = '00';\n    iziToast.success({\n      title: 'Countdown Finished',\n      message: 'The countdown has ended!',\n    });\n    flatpickrElement.disabled = false;\n    return;\n  }\n\n  // Обчислення часу\n  const time = convertMs(timeLeft);\n  daysElement.textContent = addLeadingZero(time.days);\n  hoursElement.textContent = addLeadingZero(time.hours);\n  minutesElement.textContent = addLeadingZero(time.minutes);\n  secondsElement.textContent = addLeadingZero(time.seconds);\n}\n\n// Обробник події при кліку на кнопку Start\nstartButton.addEventListener('click', () => {\n  // Перевірка, чи таймер вже запущений\n  if (countdownInterval) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please reload the page to change the timer.',\n    });\n    return;\n  }\n\n  const selectedDate = calendar.parseDate(\n    flatpickrElement.value,\n    'Y-m-d H:i:S'\n  );\n  const endTime = selectedDate.getTime();\n\n  // Запуск таймера\n  countdownInterval = setInterval(() => {\n    updateTimer(endTime);\n  }, 1000);\n\n  flatpickrElement.disabled = true;\n});\n\n// Функція для конвертації мілісекунд у дні, години, хвилини і секунди\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Функція для додавання ведучого нуля\nfunction addLeadingZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n"],"names":["flatpickrElement","startButton","daysElement","hoursElement","minutesElement","secondsElement","countdownInterval","options","selectedDates","selectedDate","currentDate","iziToast","calendar","flatpickr","updateTimer","endTime","currentTime","timeLeft","time","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAWA,MAAMA,EAAmB,SAAS,eAAe,iBAAiB,EAC5DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAG9D,IAAIC,EAGJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAC7BE,EAAc,IAAI,KAGpBD,EAAeC,GACjBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAGMW,EAAWC,EAAUb,EAAkBO,CAAO,EAGpDP,EAAiB,iBAAiB,QAAS,IAAM,CAE3CM,GACFK,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,6CACf,CAAK,CAEL,CAAC,EAGD,SAASG,EAAYC,EAAS,CAC5B,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAWF,EAAUC,EAG3B,GAAIC,GAAY,EAAG,CACjB,cAAcX,CAAiB,EAC/BJ,EAAY,YAAc,KAC1BC,EAAa,YAAc,KAC3BC,EAAe,YAAc,KAC7BC,EAAe,YAAc,KAC7BM,EAAS,QAAQ,CACf,MAAO,qBACP,QAAS,0BACf,CAAK,EACDX,EAAiB,SAAW,GAC5B,MACD,CAGD,MAAMkB,EAAOC,EAAUF,CAAQ,EAC/Bf,EAAY,YAAckB,EAAeF,EAAK,IAAI,EAClDf,EAAa,YAAciB,EAAeF,EAAK,KAAK,EACpDd,EAAe,YAAcgB,EAAeF,EAAK,OAAO,EACxDb,EAAe,YAAce,EAAeF,EAAK,OAAO,CAC1D,CAGAjB,EAAY,iBAAiB,QAAS,IAAM,CAE1C,GAAIK,EAAmB,CACrBK,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,6CACf,CAAK,EACD,MACD,CAMD,MAAMI,EAJeH,EAAS,UAC5BZ,EAAiB,MACjB,aACJ,EAC+B,UAG7BM,EAAoB,YAAY,IAAM,CACpCQ,EAAYC,CAAO,CACpB,EAAE,GAAI,EAEPf,EAAiB,SAAW,EAC9B,CAAC,EAGD,SAASmB,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACpC"}